<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic | Hugo Academic CV Theme</title>
    <link>http://localhost:1313/tags/academic/</link>
      <atom:link href="http://localhost:1313/tags/academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 08 Mar 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu_645fa481986063ef.png</url>
      <title>Academic</title>
      <link>http://localhost:1313/tags/academic/</link>
    </image>
    
    <item>
      <title>Пост по неделе с 10 по 17 марта</title>
      <link>http://localhost:1313/post/second-week/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/second-week/</guid>
      <description>&lt;h2 id=&#34;начало-недели&#34;&gt;Начало недели&lt;/h2&gt;
&lt;p&gt;Неделя началась с выступления по докладу по Архитектуре компьютера, оно прошло успешно, ведь я изучил больше количество литературы и потратил несколько часов на создание презентации. Начало пары было в 10.30.&lt;/p&gt;
&lt;h2 id=&#34;китайский-язык&#34;&gt;Китайский язык&lt;/h2&gt;
&lt;p&gt;На этой неделе я активно занимался китайским, ведь последние несколько недель не уделял должного внимания. Учил иероглифы
и делал упражнения.&lt;/p&gt;
&lt;h2 id=&#34;выходные&#34;&gt;Выходные&lt;/h2&gt;
&lt;p&gt;На выходных я посетил театр, который находится в центре Москвы. Мероприятие обещало быть многообещающим и оно таковым и было. После этого я пошел на ужин в кафе неподалеку, все было очень вкусно.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по неделе с 3 по 9 марта</title>
      <link>http://localhost:1313/post/first-week/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/first-week/</guid>
      <description>&lt;h2 id=&#34;начало-недели&#34;&gt;Начало недели&lt;/h2&gt;
&lt;p&gt;Неделя началась достаточно напряженно, было много заданий и необходимо было выполнить несколько лабораторных. Я все выполнил успешно и сдал вовремя.&lt;/p&gt;
&lt;h2 id=&#34;выступление-на-истории-религий&#34;&gt;Выступление на Истории религий&lt;/h2&gt;
&lt;p&gt;В среду я выступил на истории религий, которая проходила в главном корпусе РУДН, выступление длилось около 20 минут, все очень интересно слушали. Я получил максимальные 20 баллов.&lt;/p&gt;
&lt;h2 id=&#34;выходные&#34;&gt;Выходные&lt;/h2&gt;
&lt;p&gt;На выходных планирую сделать несколько лабораторных работ по архитектуре компьютеров и сделать второй этап проекта, чтобы в будущем было легче справляться с нагрузкой&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Что такое CI/CD</title>
      <link>http://localhost:1313/post/ci-cd/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ci-cd/</guid>
      <description>&lt;h2 id=&#34;определение-cicd&#34;&gt;Определение CI/CD&lt;/h2&gt;
&lt;p&gt;CI/CD (Continuous Integration, Continuous Delivery — непрерывная интеграция и доставка) — это технология автоматизации тестирования и доставки новых модулей разрабатываемого проекта заинтересованным сторонам (разработчикам, аналитикам, инженерам качества, конечным пользователям и др.)&lt;/p&gt;
&lt;h2 id=&#34;принципы-cicd&#34;&gt;Принципы CI/CD&lt;/h2&gt;
&lt;p&gt;Концепция непрерывной интеграции и развертывания относится к agile-методологиям разработки программного обеспечения. Ее основная цель — уделение достаточного внимания бизнес-требованиям, безопасности и качеству кода конечного продукта. В рамках подхода решаются следующие задачи:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Автоматизация последовательной сборки, упаковки и тестирования программных продуктов;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Автоматизация развертывания приложения в различных окружениях;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Минимизация ошибок и уязвимостей программного продукта.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Разработка по методике CI/CD соответствует таким основным принципам:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Распределение ответственности. Задачи и этапы разработки разделяются между членами команды или ее подгруппами (при работе над большим проектом). Рабочий процесс организуется с учетом бизнес-логистики, внедрения сквозных функций, проведения тестов, безопасности хранения данных и т.д.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сокращение рисков. Каждый разработчик или подгруппа разработчиков должны стремиться минимизировать уязвимости и ошибки на всех этапах разработки. Для этого постоянно контролируется бизнес-логистика, проводится пользовательское тестирование продукта, оптимизируется хранение, обработка данных и т.д.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Оптимизация обратной связи. Успех проекта зависит от того, как работают друг с другом разработчики, клиенты и пользователи. Это влияет на скорость внесения в приложение корректировок и обновлений. Если сборку и тестирование можно автоматизировать, то во многих других операциях требуется участие человека. Чтобы взаимодействие происходило конструктивнее, уменьшается количество посредников между заказчиком, исполнителями и пользователями.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создание рабочей среды. Для удобства совместной работы у разработчиков должно быть общее рабочее пространство. Помимо основной ветки процесса в нем должна быть побочная – в ней удобнее проводить тестирование, вносить корректировки, отслеживать отказоустойчивость и т.д&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;преимущества-cicd&#34;&gt;Преимущества CI/CD&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Сокращение сроков разработки. Методология уменьшает время доработок до нескольких дней, в сложных проектах — недель. Это позволяет разработчикам быстрее тестировать и опробовать нововведения, а затем внедрять их в продукт раньше конкурентов.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Отбор перспективных вариантов. Быстрое тестирование и большое количество итераций позволяют разработчику вовремя отсеивать бесперспективные варианты кода на начальных этапах. Это также способствует экономичному расходованию времени и ресурсов без их распыления на тупиковые направления.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Качество тестирования. Сочетание ручной и автоматизированной проверки позволяет выявлять ошибки на ранних этапах разработки. Это снижает вероятность их накопления на этапе релиза, что еще больше сокращает время работы над проектом.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Язык разметки Markdown</title>
      <link>http://localhost:1313/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/</guid>
      <description>&lt;h2 id=&#34;определение-языка-разметки-markdown&#34;&gt;Определение языка разметки Markdown&lt;/h2&gt;
&lt;p&gt;Markdown — это облегчённый язык разметки для форматирования текстовых документов. Markdown-файлы без потерь преобразуются в другие форматы (например, HTML и PDF), открываются в любом текстовом редакторе и будут понятны любому человеку даже в виде исходного кода.&lt;/p&gt;
&lt;h2 id=&#34;как-и-зачем-придумали-markdown&#34;&gt;Как и зачем придумали Markdown&lt;/h2&gt;
&lt;p&gt;Markdown создали Джон Грубер и Аарон Шварц в 2004 году. Название языка — игра слов. Разметка по-английски называется markup, что можно дословно перевести как «отметка вверх». Markdown, соответственно, — «отметка вниз».&lt;/p&gt;
&lt;p&gt;В процессе работы Грубер и Шварц вдохновлялись соглашениями по разметке текста в электронных письмах. Они хотели сделать язык, который было бы удобно читать даже в виде исходного кода. Также Грубер написал программу на Perl, которая преобразовывала Markdown-файлы в HTML.&lt;/p&gt;
&lt;h2 id=&#34;где-используют-markdown&#34;&gt;Где используют Markdown&lt;/h2&gt;
&lt;p&gt;Markdown особенно востребован у программистов, потому что они часто сталкиваются с технической документацией. На нём оформляют:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;readme-файлы (например, в репозиториях на GitHub);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;страницы на сайте технической документации Microsoft Learn;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;посты и комментарии на популярном сайте вопросов и ответов о программировании Stack Overflow (как и во всех других проектах Stack Exchange).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Пользуются этим языком не только программисты. Его также используют для «гражданских» задач. Вот что он позволяет делать:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;писать посты и комментарии на Reddit;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;создавать личные заметки в специальных приложениях (например, в Obsidian);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;форматировать текст на личном сайте или в блоге;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;быстро оформлять документы и электронные письма, чтобы они прилично выглядели.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;При желании с помощью Markdown можно даже отформатировать книгу или сделать презентацию. А ещё некоторые принципы языка используют для работы с текстом в мессенджерах: Telegram, WhatsApp, Viber, Discord.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
